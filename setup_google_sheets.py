#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Google Sheets —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ –∏ —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
"""

import asyncio
import logging
from datetime import datetime
from utils.google_services import setup_google_sheets_service
from config.config import load_config

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)


async def setup_sheets():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Google Sheets —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ –∏ —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"""
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        config = load_config()
        
        if not config.google:
            logger.error("‚ùå Google –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return
        
        # –°–æ–∑–¥–∞–µ–º Google Sheets —Å–µ—Ä–≤–∏—Å
        google_sheets_service = setup_google_sheets_service(config)
        
        if not google_sheets_service:
            logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å Google Sheets —Å–µ—Ä–≤–∏—Å")
            return
        
        logger.info("‚úÖ Google Sheets —Å–µ—Ä–≤–∏—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
        spreadsheet = google_sheets_service.gc.open_by_key(google_sheets_service.spreadsheet_id)
        logger.info(f"üìã –û—Ç–∫—Ä—ã—Ç–∞ —Ç–∞–±–ª–∏—Ü–∞: {google_sheets_service.spreadsheet_id}")
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –ª–∏—Å—Ç Applications
        worksheet_name = "Applications"
        try:
            worksheet = spreadsheet.worksheet(worksheet_name)
            logger.info(f"‚úÖ –õ–∏—Å—Ç {worksheet_name} –Ω–∞–π–¥–µ–Ω")
            
            # –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ª–∏—Å—Ç
            logger.info("üßπ –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ª–∏—Å—Ç...")
            worksheet.clear()
            
        except Exception:
            logger.info(f"üìÑ –õ–∏—Å—Ç {worksheet_name} –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π...")
            worksheet = spreadsheet.add_worksheet(title=worksheet_name, rows=1000, cols=20)
        
        # –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Å–æ–≥–ª–∞—Å–Ω–æ –Ω–∞—à–µ–π —Å–∏—Å—Ç–µ–º–µ
        headers = [
            'Timestamp',           # A
            'User ID',             # B
            'Username',            # C
            'Full Name',           # D
            'First Name',          # E
            'Last Name',           # F
            'Middle Name',         # G
            'Course',              # H
            'Dormitory',           # I
            'Email',               # J
            'Phone',               # K
            'Personal Qualities',  # L
            'Motivation',          # M
            'Logistics Rating',    # N
            'Marketing Rating',    # O
            'PR Rating',           # P
            'Program Rating',      # Q
            'Partners Rating',     # R
            'Created At',          # S
            'Updated At'           # T
        ]
        
        logger.info("üìã –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏...")
        worksheet.append_row(headers)
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        test_data = [
            [
                datetime.now().isoformat(),                    # Timestamp
                '123456789',                                   # User ID
                'test_user',                                   # Username
                '–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á',                       # Full Name
                '–ò–≤–∞–Ω',                                        # First Name
                '–ò–≤–∞–Ω–æ–≤',                                      # Last Name
                '–ò–≤–∞–Ω–æ–≤–∏—á',                                    # Middle Name
                '3_bachelor',                                  # Course
                '–î–∞',                                          # Dormitory
                'test@student.spbu.ru',                       # Email
                '+7-999-123-45-67',                           # Phone
                '–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π, –∫–æ–º–º—É–Ω–∏–∫–∞–±–µ–ª—å–Ω—ã–π, –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–π', # Personal Qualities
                '–•–æ—á—É –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–µ–±—è –≤ –≤–æ–ª–æ–Ω—Ç–µ—Ä—Å–∫–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏', # Motivation
                '5',                                           # Logistics Rating
                '4',                                           # Marketing Rating
                '3',                                           # PR Rating
                '5',                                           # Program Rating
                '2',                                           # Partners Rating
                datetime.now().isoformat(),                    # Created At
                datetime.now().isoformat(),                    # Updated At
            ]
        ]
        
        logger.info("üìù –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ...")
        for i, row in enumerate(test_data, 1):
            worksheet.append_row(row)
            logger.info(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ —Ç–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å {i}")
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ (–¥–µ–ª–∞–µ–º –∏—Ö –∂–∏—Ä–Ω—ã–º–∏)
        logger.info("üé® –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏...")
        try:
            worksheet.format('A1:T1', {
                'textFormat': {'bold': True},
                'backgroundColor': {'red': 0.9, 'green': 0.9, 'blue': 0.9}
            })
            logger.info("‚úÖ –ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω—ã")
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–≥–æ–ª–æ–≤–∫–∏: {e}")
        
        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥–≥–æ–Ω—è–µ–º —à–∏—Ä–∏–Ω—É –∫–æ–ª–æ–Ω–æ–∫
        logger.info("üìè –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —à–∏—Ä–∏–Ω—É –∫–æ–ª–æ–Ω–æ–∫...")
        try:
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —à–∏—Ä–∏–Ω—É –∫–æ–ª–æ–Ω–æ–∫
            requests = [
                {
                    'updateDimensionProperties': {
                        'range': {
                            'sheetId': worksheet.id,
                            'dimension': 'COLUMNS',
                            'startIndex': 0,  # A
                            'endIndex': 20    # T
                        },
                        'properties': {
                            'pixelSize': 150
                        },
                        'fields': 'pixelSize'
                    }
                }
            ]
            
            spreadsheet.batch_update({'requests': requests})
            logger.info("‚úÖ –®–∏—Ä–∏–Ω–∞ –∫–æ–ª–æ–Ω–æ–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞")
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —à–∏—Ä–∏–Ω—É –∫–æ–ª–æ–Ω–æ–∫: {e}")
        
        logger.info("üéâ Google Sheets —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
        logger.info(f"üîó –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–∞–±–ª–∏—Ü—É: https://docs.google.com/spreadsheets/d/{config.google.spreadsheet_id}")
        
        return True
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Google Sheets: {e}")
        return False


async def test_application_export():
    """–¢–µ—Å—Ç —ç–∫—Å–ø–æ—Ä—Ç–∞ –∑–∞—è–≤–∫–∏ –≤ Google Sheets"""
    try:
        config = load_config()
        
        google_sheets_service = setup_google_sheets_service(config)
        
        if not google_sheets_service:
            logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å Google Sheets —Å–µ—Ä–≤–∏—Å")
            return False
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏
        test_application = {
            'telegram_id': '555666777',
            'telegram_username': 'test_user_priority',
            'full_name': '–¢–µ—Å—Ç–æ–≤ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –°–∏—Å—Ç–µ–º–æ–≤–∏—á',
            'first_name': '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç',
            'last_name': '–¢–µ—Å—Ç–æ–≤',
            'middle_name': '–°–∏—Å—Ç–µ–º–æ–≤–∏—á',
            'course': '4_bachelor',
            'dormitory': True,
            'email': 'priority.test@student.spbu.ru',
            'phone': '+7-555-666-77-88',
            'personal_qualities': '–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π, –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω–Ω—ã–π, —É–º–µ—é —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –∫–æ–º–∞–Ω–¥–µ',
            'motivation': '–•–æ—á—É –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–µ–±—è –≤ —Ä–æ–ª–∏ –≤–æ–ª–æ–Ω—Ç–µ—Ä–∞ –∏ –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—ã–π –æ–ø—ã—Ç',
            'logistics_rating': 5,
            'marketing_rating': 4,
            'pr_rating': 3,
            'program_rating': 5,
            'partners_rating': 2,
            'created_at': datetime.now().isoformat(),
            'updated_at': datetime.now().isoformat()
        }
        
        logger.info("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —ç–∫—Å–ø–æ—Ä—Ç –∑–∞—è–≤–∫–∏...")
        success = await google_sheets_service.add_application_to_sheet(test_application)
        
        if success:
            logger.info("‚úÖ –¢–µ—Å—Ç —ç–∫—Å–ø–æ—Ä—Ç–∞ –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!")
        else:
            logger.error("‚ùå –¢–µ—Å—Ç —ç–∫—Å–ø–æ—Ä—Ç–∞ –Ω–µ —É–¥–∞–ª—Å—è!")
        
        return success
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞: {e}")
        return False


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Google Sheets...")
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Google Sheets
    setup_success = await setup_sheets()
    
    if setup_success:
        logger.info("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Google Sheets –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —ç–∫—Å–ø–æ—Ä—Ç
        logger.info("üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞...")
        test_success = await test_application_export()
        
        if test_success:
            logger.info("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        else:
            logger.error("‚ùå –¢–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏")
    else:
        logger.error("‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Google Sheets –Ω–µ —É–¥–∞–ª–∞—Å—å")


if __name__ == "__main__":
    asyncio.run(main())
