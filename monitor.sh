#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–æ—Ç–∞
set -e

echo "üîç –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–æ—Ç–∞..."
echo "==============================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "üì¶ –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
docker-compose -f docker-compose.prod.yml ps

echo ""
echo "üíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤:"
docker stats --no-stream --format "table {{.Container}}\t{{.CPUPerc}}\t{{.MemUsage}}\t{{.NetIO}}" $(docker-compose -f docker-compose.prod.yml ps -q)

echo ""
echo "üóÇÔ∏è –†–∞–∑–º–µ—Ä –ª–æ–≥–æ–≤:"
if [ -d "logs" ]; then
    du -sh logs/*
else
    echo "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è logs –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
fi

echo ""
echo "üöÄ –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 –∑–∞–ø–∏—Å–µ–π –∏–∑ –ª–æ–≥–∞ –±–æ—Ç–∞:"
if [ -f "logs/bot.log" ]; then
    tail -n 10 logs/bot.log
else
    echo "–§–∞–π–ª bot.log –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

echo ""
echo "‚ùå –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å):"
if [ -f "logs/errors.log" ]; then
    if [ -s "logs/errors.log" ]; then
        tail -n 5 logs/errors.log
    else
        echo "–û—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ ‚úÖ"
    fi
else
    echo "–§–∞–π–ª errors.log –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

echo ""
echo "üë• –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —á–∞—Å:"
if [ -f "logs/user_actions.log" ]; then
    if [ -s "logs/user_actions.log" ]; then
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —á–∞—Å
        HOUR_AGO=$(date -d '1 hour ago' '+%Y-%m-%d %H')
        grep "$HOUR_AGO" logs/user_actions.log | wc -l | xargs echo "–î–µ–π—Å—Ç–≤–∏–π:"
    else
        echo "–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
    fi
else
    echo "–§–∞–π–ª user_actions.log –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

echo ""
echo "üóÑÔ∏è –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:"
if docker-compose -f docker-compose.prod.yml exec -T postgres pg_isready -q; then
    echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞"
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∑–∞—è–≤–æ–∫
    source .env
    USERS_COUNT=$(docker-compose -f docker-compose.prod.yml exec -T postgres psql -U $DB_USER -d $DB_NAME -t -c "SELECT COUNT(*) FROM users;" | xargs)
    APPLICATIONS_COUNT=$(docker-compose -f docker-compose.prod.yml exec -T postgres psql -U $DB_USER -d $DB_NAME -t -c "SELECT COUNT(*) FROM applications;" | xargs)
    echo "üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: $USERS_COUNT"
    echo "üìã –ó–∞—è–≤–æ–∫: $APPLICATIONS_COUNT"
else
    echo "‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
fi

echo ""
echo "üì° –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Redis:"
if docker-compose -f docker-compose.prod.yml exec -T redis redis-cli ping | grep -q PONG; then
    echo "‚úÖ Redis –¥–æ—Å—Ç—É–ø–µ–Ω"
    REDIS_KEYS=$(docker-compose -f docker-compose.prod.yml exec -T redis redis-cli dbsize | xargs)
    echo "üîë –ö–ª—é—á–µ–π –≤ Redis: $REDIS_KEYS"
else
    echo "‚ùå Redis –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

echo ""
echo "==============================="
echo "‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω"
